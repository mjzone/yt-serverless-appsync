{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CreateOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-bookstore-dev-createOrder"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "serverless-bookstore",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-bookstore-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-bookstore-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "dynamodb:BatchWriteItem",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ordersTable",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-bookstore",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CreateOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-bookstore/dev/1613771467585-2021-02-19T21:51:07.585Z/serverless-bookstore.zip"
        },
        "FunctionName": "serverless-bookstore-dev-createOrder",
        "Handler": "functions/createOrder.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BOOK_TABLE_NAME": {
              "Ref": "booksTable"
            },
            "ORDER_TABLE_NAME": {
              "Ref": "ordersTable"
            }
          }
        }
      },
      "DependsOn": [
        "CreateOrderLogGroup"
      ]
    },
    "CreateOrderLambdaVersionXcxX0oq16lRc4uRn2Vrm3Lcb9gF5HbCoM9FSmAMuy4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateOrderLambdaFunction"
        },
        "CodeSha256": "+7XNPGWgYM7DcmPE3/okvbJs8J9iR7sG1eXE+2iaFYU="
      }
    },
    "booksTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "bookId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "bookId",
            "KeyType": "HASH"
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "Name",
            "Value": "books-table"
          }
        ]
      }
    },
    "ordersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "orderId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "bookId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "createdAt",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "orderId",
            "KeyType": "RANGE"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "byOrder",
            "KeySchema": [
              {
                "AttributeName": "orderId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          },
          {
            "IndexName": "byBook",
            "KeySchema": [
              {
                "AttributeName": "bookId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "createdAt",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "Name",
            "Value": "orders-table"
          }
        ]
      }
    },
    "cognitoUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "BookStoreUserPool-dev",
        "UsernameAttributes": [
          "email"
        ],
        "Schema": [
          {
            "AttributeDataType": "String",
            "Mutable": true,
            "Name": "name",
            "Required": false
          }
        ]
      }
    },
    "cognitoUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "Web",
        "UserPoolId": {
          "Ref": "cognitoUserPool"
        },
        "ExplicitAuthFlows": [
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ]
      }
    },
    "cognitoAdminGroup": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "Description": "Admin users of the bookstore",
        "GroupName": "Admin",
        "RoleArn": {
          "Fn::GetAtt": [
            "cognitoAdminGroupIAMRole",
            "Arn"
          ]
        },
        "Precedence": 0,
        "UserPoolId": {
          "Ref": "cognitoUserPool"
        }
      }
    },
    "cognitoCustomerGroup": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "Description": "Customers of the bookstore",
        "GroupName": "Customer",
        "RoleArn": {
          "Fn::GetAtt": [
            "cognitoCustomerGroupIAMRole",
            "Arn"
          ]
        },
        "Precedence": 1,
        "UserPoolId": {
          "Ref": "cognitoUserPool"
        }
      }
    },
    "cognitoAdminGroupIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "bookstore-admin-group-role",
        "Description": "IAM role that admin group users assume in the bookstore application",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": [
                  "cognito-identity.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "bookstore-admin-group-policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "booksTable",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "ordersTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "cognitoCustomerGroupIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "bookstore-customer-group-role",
        "Description": "IAM role that customer group users assume in the bookstore application",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": [
                  "cognito-identity.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "bookstore-customer-group-policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "booksTable",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ordersTable",
                        "Arn"
                      ]
                    }
                  ],
                  "Condition": {
                    "ForAllValues:StringEquals": {
                      "dynamodb:LeadingKeys": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "$",
                              "{cognito-identity.amazonaws.com:sub}"
                            ]
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "BookstoreslsapiGraphQlApi": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "Name": "bookstoreslsapi",
        "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
        "AdditionalAuthenticationProviders": [],
        "UserPoolConfig": {
          "AwsRegion": "us-east-2",
          "UserPoolId": {
            "Ref": "cognitoUserPool"
          },
          "DefaultAction": "ALLOW"
        },
        "XrayEnabled": false
      }
    },
    "BookstoreslsapiGraphQlSchema": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "Definition": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ntype Query {\n  listBooks(limit: Int!, nextToken: String): BooksPage!   getBookById(bookId: ID!): Book!   myOrders(limit: Int!, nextToken: String): OrderPage!\n}\n\ntype BooksPage {\n  books: [Book]\n  nextToken: String\n}\n\ntype Book {\n  bookId: ID!\n  title: String!\n  description: String\n  imageUrl: AWSURL\n  author: String!\n  price: Float!\n  createdAt: AWSDateTime!\n  updatedAt: AWSDateTime!\n}\n\ntype OrderPage {\n  orders: [Order]\n  nextToken: String\n}\n\ntype Order {\n  userId: ID!   orderId: ID!\n  book: Book!\n  quantity: Int!\n}\n\ntype Mutation {\n    createBook(newBook: BookInput): Book! @aws_auth(cognito_groups: [\"Admin\"]) \n  \n    createOrder(newOrder: OrderInput): Boolean!\n}\n\ninput BookInput {\n  title: String!\n  description: String\n  imageUrl: AWSURL\n  author: String!\n  price: Float!\n}\n\ninput OrderInput {\n  items: [OrderItemInput]!\n}\n\ninput OrderItemInput {\n  bookId: ID!\n  quantity: Int!\n}",
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        }
      }
    },
    "BookstoreslsapiGraphQlDsbooksTableRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "appsync.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "GraphQlDsbooksTablePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:ConditionCheckItem"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-east-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                "table",
                                {
                                  "Ref": "booksTable"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "us-east-2",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Ref": "booksTable"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "BookstoreslsapiGraphQlDsordersTableRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "appsync.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "GraphQlDsordersTablePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:ConditionCheckItem"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-east-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                "table",
                                {
                                  "Ref": "ordersTable"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "us-east-2",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Ref": "ordersTable"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "BookstoreslsapiGraphQlDscreateOrderFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "appsync.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "GraphQlDscreateOrderFunctionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "lambda:invokeFunction"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CreateOrderLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        ":",
                        [
                          {
                            "Fn::GetAtt": [
                              "CreateOrderLambdaFunction",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "BookstoreslsapiGraphQlDsbooksTable": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "Name": "booksTable",
        "Type": "AMAZON_DYNAMODB",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsbooksTableRole",
            "Arn"
          ]
        },
        "DynamoDBConfig": {
          "AwsRegion": "us-east-2",
          "TableName": {
            "Ref": "booksTable"
          },
          "UseCallerCredentials": false,
          "Versioned": false
        }
      }
    },
    "BookstoreslsapiGraphQlDsordersTable": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "Name": "ordersTable",
        "Type": "AMAZON_DYNAMODB",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsordersTableRole",
            "Arn"
          ]
        },
        "DynamoDBConfig": {
          "AwsRegion": "us-east-2",
          "TableName": {
            "Ref": "ordersTable"
          },
          "UseCallerCredentials": false,
          "Versioned": false
        }
      }
    },
    "BookstoreslsapiGraphQlDscreateOrderFunction": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "Name": "createOrderFunction",
        "Type": "AWS_LAMBDA",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDscreateOrderFunctionRole",
            "Arn"
          ]
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "CreateOrderLambdaFunction",
              "Arn"
            ]
          }
        }
      }
    },
    "BookstoreslsapiGraphQlResolverQuerygetBookById": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "BookstoreslsapiGraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "getBookById",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"bookId\" : $util.dynamodb.toDynamoDBJson($ctx.args.bookId)\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsbooksTable",
            "Name"
          ]
        }
      }
    },
    "BookstoreslsapiGraphQlResolverQuerylistBooks": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "BookstoreslsapiGraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listBooks",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Scan\",\n    \"limit\" : $util.toJson($ctx.args.limit),\n    \"consistentRead\" : false,\n    \"nextToken\" : $util.toJson($util.defaultIfNullOrBlank($ctx.args.nextToken, undefined))\n}",
        "ResponseMappingTemplate": "{\n    \"books\": $util.toJson($ctx.result.items),\n    \"nextToken\": $util.toJson($util.defaultIfNullOrBlank($ctx.result.nextToken, null))\n}\n",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsbooksTable",
            "Name"
          ]
        }
      }
    },
    "BookstoreslsapiGraphQlResolverQuerymyOrders": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "BookstoreslsapiGraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "myOrders",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Query\",\n    \"query\" : {\n        \"expression\" : \"#userId = :userId\",\n        \"expressionNames\" : {\n            \"#userId\" : \"userId\"\n        },\n        \"expressionValues\" : {\n            \":userId\" : $util.dynamodb.toDynamoDBJson($ctx.identity.sub) \n        }\n    },\n    \"nextToken\" : $util.toJson($util.defaultIfNullOrBlank($ctx.arguments.nextToken, undefined)),\n    \"limit\" :  $util.toJson($ctx.arguments.limit)\n}",
        "ResponseMappingTemplate": "{\n    \"orders\": $util.toJson($ctx.result.items),\n    \"nextToken\": $util.toJson($util.defaultIfNullOrBlank($ctx.result.nextToken, null))\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsordersTable",
            "Name"
          ]
        }
      }
    },
    "BookstoreslsapiGraphQlResolverMutationcreateBook": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "BookstoreslsapiGraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "createBook",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"PutItem\",\n    \"key\": {\n        \"bookId\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n    \"attributeValues\" : {\n        \"title\"    : $util.dynamodb.toDynamoDBJson($ctx.args.newBook.title),\n        \"description\" : $util.dynamodb.toDynamoDBJson($ctx.args.newBook.description),\n        \"imageUrl\" : $util.dynamodb.toDynamoDBJson($ctx.args.newBook.imageUrl),\n        \"author\" : $util.dynamodb.toDynamoDBJson($ctx.args.newBook.author),\n        \"price\" : $util.dynamodb.toDynamoDBJson($ctx.args.newBook.price),\n        \"createdAt\" : $util.dynamodb.toDynamoDBJson($util.time.nowISO8601()),\n        \"updatedAt\" : $util.dynamodb.toDynamoDBJson($util.time.nowISO8601()),\n    }\n}\n",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsbooksTable",
            "Name"
          ]
        }
      }
    },
    "BookstoreslsapiGraphQlResolverMutationcreateOrder": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "BookstoreslsapiGraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "createOrder",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDscreateOrderFunction",
            "Name"
          ]
        }
      }
    },
    "BookstoreslsapiGraphQlResolverOrderbook": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "BookstoreslsapiGraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Order",
        "FieldName": "book",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"bookId\" : $util.dynamodb.toDynamoDBJson($ctx.source.bookId)\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "BookstoreslsapiGraphQlDsbooksTable",
            "Name"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "CreateOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateOrderLambdaVersionXcxX0oq16lRc4uRn2Vrm3Lcb9gF5HbCoM9FSmAMuy4"
      }
    },
    "BooksTable": {
      "Description": "Arn of the books table",
      "Value": {
        "Fn::GetAtt": [
          "booksTable",
          "Arn"
        ]
      }
    },
    "OrdersTable": {
      "Description": "Arn of the orders table",
      "Value": {
        "Fn::GetAtt": [
          "ordersTable",
          "Arn"
        ]
      }
    },
    "UserPoolId": {
      "Description": "Cognito user pool id",
      "Value": {
        "Ref": "cognitoUserPool"
      }
    },
    "BookstoreslsapiGraphQlApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "BookstoreslsapiGraphQlApi",
          "GraphQLUrl"
        ]
      }
    },
    "BookstoreslsapiGraphQlApiId": {
      "Value": {
        "Fn::GetAtt": [
          "BookstoreslsapiGraphQlApi",
          "ApiId"
        ]
      }
    }
  }
}